image(Z)
int=do.call(rbind, intensity)
int=do.call(rbind, intensity)
image(int)
int=do.call(rbind, intensity)
image(int)
image(log(int))
image(log(Y))
hist(log(Y))
rm(list = ls())
library(mvPoisVA)
library(fsusieR)
library(susieR)
library(ebnm)
set.seed(1)
'%!in%' <- function(x,y)!('%in%'(x,y))
N =70
data(N3finemapping)
Z <- matrix (runif(70*200, min=0,max=1), nrow = 70, ncol = 200)
mysd=0.5
lev_res =7
count.data  <- list()
N_effect=50
lf <-  list()
for ( j in 1:N_effect){
lf[[j]]<- rep(0.001, 2^lev_res )
start= sample(1:(2^lev_res-11), size=1)
lf[[j]][start:(start+10)] <-.5
lf[[j]]=  (lf[[j]])
}
true_pos <- sample(1:ncol(genotype), replace = FALSE,size=2)
plot (lf[[1]], type="l", main=paste ( "effect of SNP",true_pos[1]))
plot (lf[[2]], type="l", main=paste ( "effect of SNP",true_pos[2]))
predictor <-rep (0, length(lf[[1]] ))
count.data  <- list()
intensity= list()
for ( i in 1:N)
{
predictor <-rep (0, length(lf[[1]] ))
for ( j in 1:N_effect){
predictor <-predictor + Z[i, j]*lf[[j]]
}
predictor <- exp( predictor+ rnorm(  length(lf[[1]]), sd=mysd))
intensity[[i]]=predictor
count.data [[i]] <-   rpois(n= length(lf[[1]]) ,
lambda =predictor  )
}
count.data <- do.call(rbind, count.data)
Y <- count.data
image(Y)
image(Z)
int=do.call(rbind, intensity)
image(int)
image(log(int))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.width = 5,
fig.height = 3,
fig.align = "center",
fig.cap = "&nbsp;",
dpi = 175
)
rm(list = ls())
library(mvPoisVA)
library(fsusieR)
library(susieR)
library(ebnm)
set.seed(1)
'%!in%' <- function(x,y)!('%in%'(x,y))
N =70
data(N3finemapping)
Z <- matrix (runif(70*200, min=0,max=1), nrow = 70, ncol = 200)
mysd=0.5
lev_res =7
count.data  <- list()
N_effect=50
lf <-  list()
for ( j in 1:N_effect){
lf[[j]]<- rep(0.001, 2^lev_res )
start= sample(1:(2^lev_res-11), size=1)
lf[[j]][start:(start+10)] <-.1
lf[[j]]=  (lf[[j]])
}
true_pos <- sample(1:ncol(genotype), replace = FALSE,size=2)
plot (lf[[1]], type="l", main=paste ( "effect of SNP",true_pos[1]))
plot (lf[[2]], type="l", main=paste ( "effect of SNP",true_pos[2]))
predictor <-rep (0, length(lf[[1]] ))
count.data  <- list()
intensity= list()
for ( i in 1:N)
{
predictor <-rep (0, length(lf[[1]] ))
for ( j in 1:N_effect){
predictor <-predictor + Z[i, j]*lf[[j]]
}
predictor <- exp( predictor+ rnorm(  length(lf[[1]]), sd=mysd))
intensity[[i]]=predictor
count.data [[i]] <-   rpois(n= length(lf[[1]]) ,
lambda =predictor  )
}
count.data <- do.call(rbind, count.data)
Y <- count.data
image(Y)
image(Y)
image(log(Y))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.width = 5,
fig.height = 3,
fig.align = "center",
fig.cap = "&nbsp;",
dpi = 175
)
rm(list = ls())
library(mvPoisVA)
library(fsusieR)
library(susieR)
library(ebnm)
set.seed(1)
'%!in%' <- function(x,y)!('%in%'(x,y))
N =70
data(N3finemapping)
Z <- matrix (runif(70*200, min=0,max=1), nrow = 70, ncol = 200)
mysd=0.5
lev_res =7
count.data  <- list()
N_effect=50
lf <-  list()
for ( j in 1:N_effect){
lf[[j]]<- rep(0.001, 2^lev_res )
start= sample(1:(2^lev_res-11), size=1)
lf[[j]][start:(start+10)] <-.5
lf[[j]]=  (lf[[j]])
}
true_pos <- sample(1:ncol(genotype), replace = FALSE,size=2)
plot (lf[[1]], type="l", main=paste ( "effect of SNP",true_pos[1]))
plot (lf[[2]], type="l", main=paste ( "effect of SNP",true_pos[2]))
predictor <-rep (0, length(lf[[1]] ))
count.data  <- list()
intensity= list()
for ( i in 1:N)
{
predictor <-rep (0, length(lf[[1]] ))
for ( j in 1:N_effect){
predictor <-predictor + Z[i, j]*lf[[j]]
}
predictor <- exp( predictor+ rnorm(  length(lf[[1]]), sd=mysd))
intensity[[i]]=predictor
count.data [[i]] <-   rpois(n= length(lf[[1]]) ,
lambda =predictor  )
}
count.data <- do.call(rbind, count.data)
Y <- count.data
hist(Y)
rm(list = ls())
library(mvPoisVA)
library(fsusieR)
library(susieR)
library(ebnm)
set.seed(1)
'%!in%' <- function(x,y)!('%in%'(x,y))
N =70
data(N3finemapping)
Z <- matrix (runif(70*200, min=0,max=2), nrow = 70, ncol = 200)
mysd=0.5
lev_res =7
count.data  <- list()
N_effect=50
lf <-  list()
for ( j in 1:N_effect){
lf[[j]]<- rep(0.001, 2^lev_res )
start= sample(1:(2^lev_res-11), size=1)
lf[[j]][start:(start+10)] <-.5
lf[[j]]=  (lf[[j]])
}
true_pos <- sample(1:ncol(genotype), replace = FALSE,size=2)
plot (lf[[1]], type="l", main=paste ( "effect of SNP",true_pos[1]))
plot (lf[[2]], type="l", main=paste ( "effect of SNP",true_pos[2]))
predictor <-rep (0, length(lf[[1]] ))
count.data  <- list()
intensity= list()
for ( i in 1:N)
{
predictor <-rep (0, length(lf[[1]] ))
for ( j in 1:N_effect){
predictor <-predictor + Z[i, j]*lf[[j]]
}
predictor <- exp( predictor+ rnorm(  length(lf[[1]]), sd=mysd))
intensity[[i]]=predictor
count.data [[i]] <-   rpois(n= length(lf[[1]]) ,
lambda =predictor  )
}
count.data <- do.call(rbind, count.data)
Y <- count.data
hist(Y)
predictor <-rep (0, length(lf[[1]] ))
count.data  <- list()
intensity= list()
for ( i in 1:N)
{
predictor <-rep (0, length(lf[[1]] ))
for ( j in 1:N_effect){
predictor <-predictor + Z[i, j]*lf[[j]]
}
predictor <- exp( predictor+ rnorm(  length(lf[[1]]), sd=mysd))
intensity[[i]]=predictor
count.data [[i]] <-   rpois(n= length(lf[[1]]) ,
lambda =predictor  )
}
count.data <- do.call(rbind, count.data)
Y <- count.data
hist(Y, nclass=100, main="Histogram of the count data")
rm(list = ls())
library(mvPoisVA)
library(fsusieR)
library(susieR)
library(ebnm)
set.seed(1)
'%!in%' <- function(x,y)!('%in%'(x,y))
N =70
data(N3finemapping)
Z <- matrix (runif(70*200, min=0,max=1), nrow = 70, ncol = 200)
mysd=0.5
lev_res =7
count.data  <- list()
N_effect=50
lf <-  list()
for ( j in 1:N_effect){
lf[[j]]<- rep(0.001, 2^lev_res )
start= sample(1:(2^lev_res-11), size=1)
lf[[j]][start:(start+10)] <-1
lf[[j]]=  (lf[[j]])
}
true_pos <- sample(1:ncol(genotype), replace = FALSE,size=2)
plot (lf[[1]], type="l", main=paste ( "effect of SNP",true_pos[1]))
plot (lf[[2]], type="l", main=paste ( "effect of SNP",true_pos[2]))
predictor <-rep (0, length(lf[[1]] ))
count.data  <- list()
intensity= list()
for ( i in 1:N)
{
predictor <-rep (0, length(lf[[1]] ))
for ( j in 1:N_effect){
predictor <-predictor + Z[i, j]*lf[[j]]
}
predictor <- exp( predictor+ rnorm(  length(lf[[1]]), sd=mysd))
intensity[[i]]=predictor
count.data [[i]] <-   rpois(n= length(lf[[1]]) ,
lambda =predictor  )
}
count.data <- do.call(rbind, count.data)
Y <- count.data
hist(Y, nclass=100, main="Histogram of the count data")
lev_res =7
count.data  <- list()
N_effect=20
lf <-  list()
for ( j in 1:N_effect){
lf[[j]]<- rep(0.001, 2^lev_res )
start= sample(1:(2^lev_res-11), size=1)
lf[[j]][start:(start+10)] <-1
lf[[j]]=  (lf[[j]])
}
true_pos <- sample(1:ncol(genotype), replace = FALSE,size=2)
plot (lf[[1]], type="l", main=paste ( "effect of SNP",true_pos[1]))
plot (lf[[2]], type="l", main=paste ( "effect of SNP",true_pos[2]))
predictor <-rep (0, length(lf[[1]] ))
count.data  <- list()
intensity= list()
for ( i in 1:N)
{
predictor <-rep (0, length(lf[[1]] ))
for ( j in 1:N_effect){
predictor <-predictor + Z[i, j]*lf[[j]]
}
predictor <- exp( predictor+ rnorm(  length(lf[[1]]), sd=mysd))
intensity[[i]]=predictor
count.data [[i]] <-   rpois(n= length(lf[[1]]) ,
lambda =predictor  )
}
count.data <- do.call(rbind, count.data)
Y <- count.data
hist(Y, nclass=100, main="Histogram of the count data")
predictor <-rep (0, length(lf[[1]] ))
count.data  <- list()
intensity= list()
for ( i in 1:N)
{
predictor <-rep (0, length(lf[[1]] ))
for ( j in 1:N_effect){
predictor <-predictor + Z[i, j]*lf[[j]]
}
predictor <- exp( predictor+ rnorm(  length(lf[[1]]), sd=mysd))
intensity[[i]]=predictor
count.data [[i]] <-   rpois(n= length(lf[[1]]) ,
lambda =predictor  )
}
count.data <- do.call(rbind, count.data)
Y <- count.data
image(Y)
hist(Y, nclass=100, main="Histogram of the count data")
rm(list = ls())
library(mvPoisVA)
library(fsusieR)
library(susieR)
library(ebnm)
set.seed(1)
'%!in%' <- function(x,y)!('%in%'(x,y))
N =70
data(N3finemapping)
Z <- matrix (runif(70*200, min=0,max=1), nrow = 70, ncol = 200)
mysd=0.2
lev_res =7
count.data  <- list()
N_effect=20
lf <-  list()
for ( j in 1:N_effect){
lf[[j]]<- rep(0.001, 2^lev_res )
start= sample(1:(2^lev_res-11), size=1)
lf[[j]][start:(start+10)] <-1
lf[[j]]=  (lf[[j]])
}
true_pos <- sample(1:ncol(genotype), replace = FALSE,size=2)
plot (lf[[1]], type="l", main=paste ( "effect of SNP",true_pos[1]))
plot (lf[[2]], type="l", main=paste ( "effect of SNP",true_pos[2]))
predictor <-rep (0, length(lf[[1]] ))
count.data  <- list()
intensity= list()
for ( i in 1:N)
{
predictor <-rep (0, length(lf[[1]] ))
for ( j in 1:N_effect){
predictor <-predictor + Z[i, j]*lf[[j]]
}
predictor <- exp( predictor+ rnorm(  length(lf[[1]]), sd=mysd))
intensity[[i]]=predictor
count.data [[i]] <-   rpois(n= length(lf[[1]]) ,
lambda =predictor  )
}
count.data <- do.call(rbind, count.data)
Y <- count.data
image(Y)
hist(Y, nclass=100, main="Histogram of the count data")
rm(list = ls())
library(mvPoisVA)
library(fsusieR)
library(susieR)
library(ebnm)
set.seed(1)
'%!in%' <- function(x,y)!('%in%'(x,y))
N =70
data(N3finemapping)
Z <- matrix (runif(70*200, min=0,max=2), nrow = 70, ncol = 200)
mysd=0.2
lev_res =7
count.data  <- list()
N_effect=20
lf <-  list()
for ( j in 1:N_effect){
lf[[j]]<- rep(0.001, 2^lev_res )
start= sample(1:(2^lev_res-11), size=1)
lf[[j]][start:(start+10)] <-1
lf[[j]]=  (lf[[j]])
}
true_pos <- sample(1:ncol(genotype), replace = FALSE,size=2)
plot (lf[[1]], type="l", main=paste ( "effect of SNP",true_pos[1]))
plot (lf[[2]], type="l", main=paste ( "effect of SNP",true_pos[2]))
predictor <-rep (0, length(lf[[1]] ))
count.data  <- list()
intensity= list()
for ( i in 1:N)
{
predictor <-rep (0, length(lf[[1]] ))
for ( j in 1:N_effect){
predictor <-predictor + Z[i, j]*lf[[j]]
}
predictor <- exp( predictor+ rnorm(  length(lf[[1]]), sd=mysd))
intensity[[i]]=predictor
count.data [[i]] <-   rpois(n= length(lf[[1]]) ,
lambda =predictor  )
}
count.data <- do.call(rbind, count.data)
Y <- count.data
image(Y)
hist(Y, nclass=100, main="Histogram of the count data")
rm(list = ls())
library(mvPoisVA)
library(fsusieR)
library(susieR)
library(ebnm)
set.seed(1)
'%!in%' <- function(x,y)!('%in%'(x,y))
N =70
data(N3finemapping)
Z <- matrix (runif(70*200, min=0,max=1.5), nrow = 70, ncol = 200)
mysd=0.2
lev_res =7
count.data  <- list()
N_effect=20
lf <-  list()
for ( j in 1:N_effect){
lf[[j]]<- rep(0.001, 2^lev_res )
start= sample(1:(2^lev_res-11), size=1)
lf[[j]][start:(start+10)] <-1
lf[[j]]=  (lf[[j]])
}
true_pos <- sample(1:ncol(genotype), replace = FALSE,size=2)
plot (lf[[1]], type="l", main=paste ( "effect of SNP",true_pos[1]))
plot (lf[[2]], type="l", main=paste ( "effect of SNP",true_pos[2]))
predictor <-rep (0, length(lf[[1]] ))
count.data  <- list()
intensity= list()
for ( i in 1:N)
{
predictor <-rep (0, length(lf[[1]] ))
for ( j in 1:N_effect){
predictor <-predictor + Z[i, j]*lf[[j]]
}
predictor <- exp( predictor+ rnorm(  length(lf[[1]]), sd=mysd))
intensity[[i]]=predictor
count.data [[i]] <-   rpois(n= length(lf[[1]]) ,
lambda =predictor  )
}
count.data <- do.call(rbind, count.data)
Y <- count.data
image(Y)
hist(Y, nclass=100, main="Histogram of the count data")
predictor <-rep (0, length(lf[[1]] ))
count.data  <- list()
intensity= list()
for ( i in 1:N)
{
predictor <-rep (0, length(lf[[1]] ))
for ( j in 1:N_effect){
predictor <-predictor + Z[i, j]*lf[[j]]
}
predictor <- exp( predictor+ rnorm(  length(lf[[1]]), sd=mysd))
intensity[[i]]=predictor
count.data [[i]] <-   rpois(n= length(lf[[1]]) ,
lambda =predictor  )
}
count.data <- do.call(rbind, count.data)
Y <- count.data
image(log(Y))
hist(Y, nclass=100, main="Histogram of the count data")
rm(list = ls())
library(mvPoisVA)
library(fsusieR)
library(susieR)
library(ebnm)
set.seed(1)
'%!in%' <- function(x,y)!('%in%'(x,y))
N =70
data(N3finemapping)
Z <- matrix (runif(70*200, min=0,max=1.5), nrow = 70, ncol = 200)
mysd=0.2
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.width = 5,
fig.height = 3,
fig.align = "center",
fig.cap = "&nbsp;",
dpi = 175
)
rm(list = ls())
library(mvPoisVA)
library(fsusieR)
library(susieR)
library(ebnm)
set.seed(1)
'%!in%' <- function(x,y)!('%in%'(x,y))
N =70
data(N3finemapping)
Z <- matrix (runif(70*200, min=0,max=1.5), nrow = 70, ncol = 200)
mysd=0.2
lev_res =7
count.data  <- list()
N_effect=30
lf <-  list()
for ( j in 1:N_effect){
lf[[j]]<- rep(0.001, 2^lev_res )
start= sample(1:(2^lev_res-11), size=1)
lf[[j]][start:(start+10)] <-1
lf[[j]]=  (lf[[j]])
}
true_pos <- sample(1:ncol(genotype), replace = FALSE,size=2)
plot (lf[[1]], type="l", main=paste ( "effect of SNP",true_pos[1]))
plot (lf[[2]], type="l", main=paste ( "effect of SNP",true_pos[2]))
predictor <-rep (0, length(lf[[1]] ))
count.data  <- list()
intensity= list()
for ( i in 1:N)
{
predictor <-rep (0, length(lf[[1]] ))
for ( j in 1:N_effect){
predictor <-predictor + Z[i, j]*lf[[j]]
}
predictor <- exp( predictor+ rnorm(  length(lf[[1]]), sd=mysd))
intensity[[i]]=predictor
count.data [[i]] <-   rpois(n= length(lf[[1]]) ,
lambda =predictor  )
}
count.data <- do.call(rbind, count.data)
Y <- count.data
image(log(Y))
hist(Y, nclass=100, main="Histogram of the count data")
library(mvPoisVA)
res= acc_Pois_fSuSiE2(Y=Y,Z=Z)
source("C:/Document/Serieux/Travail/Package/mvPoisVA/R/accelerated_Pois_fSuSiE2.R", echo=TRUE)
