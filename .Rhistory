m = opt$par[1:n]
v = exp(opt$par[(n+1):(2*n)])
obj = pois_mean_GG_obj(x,s,prior_mean,prior_var,m,v)
}
return(list(posterior = list(posteriorMean_latent = m,
posteriorVar_latent = v,
posteriorMean_mean = exp(m + v/2)),
fitted_g = list(mean = beta, var=sigma2),
obj_value=obj))
#return(list(posteriorMean=m,priorMean=beta,priorVar=sigma2,posteriorVar=v,obj_value=obj))
}
#'calculate objective function
pois_mean_GG_opt_obj = function(theta,x,s,beta,sigma2,n){
m = theta[1:n]
v = theta[(n+1):(2*n)]
return(-sum(x*m-s*exp(m+exp(v)/2)-(m^2+exp(v)-2*m*beta)/2/sigma2+v/2))
}
#'calculate gradient vector
pois_mean_GG_opt_obj_gradient = function(theta,x,s,beta,sigma2,n){
m = theta[1:n]
v = theta[(n+1):(2*n)]
g1 = -(x-s*exp(m+exp(v)/2)-m/sigma2+beta/sigma2)
g2 = -(-exp(v)/2*s*exp(m+exp(v)/2) - exp(v)/2/sigma2 + 1/2)
return(c(g1,g2))
}
pois_mean_GG_obj = function(x,s,beta,sigma2,m,v){
return(sum(x*m-s*exp(m+v/2)-log(sigma2)/2-(m^2+v-2*m*beta+beta^2)/2/sigma2+log(v)/2))
}
#'@param x a data point
#'@param beta prior mean
#'@param sigma2 prior variance
#'@param optim_method optimization method in `optim` function
pois_mean_GG1 = function(x,s,
beta,
sigma2,
optim_method = 'BFGS',
m_init  = NULL,
v_init = NULL){
# init m, v
if(is.null(m_init)){
m = 0
}else{
m = m_init
}
if(is.null(v_init)){
v = 1
}else{
v = v_init
}
opt = optim(c(m,log(v)),
fn = pois_mean_GG1_obj,
gr = pois_mean_GG1_obj_gradient,
x=x,
s=s,
beta=beta,
sigma2=sigma2,
method = optim_method)
return(list(m=opt$par[1],v=exp(opt$par[2]),obj=-opt$value))
}
#'calculate objective function
pois_mean_GG1_obj = function(theta,x,s = NULL,beta,sigma2){
return(-(x*theta[1]-s*exp(theta[1]+exp(theta[2])/2)-(theta[1]^2+exp(theta[2])-2*theta[1]*beta)/2/sigma2+log(exp(theta[2]))/2))
}
#'calculate gradient vector
pois_mean_GG1_obj_gradient = function(theta,x,s = NULL,beta,sigma2){
g1 = -(x-s*exp(theta[1]+exp(theta[2])/2)-theta[1]/sigma2+beta/sigma2)
g2 = -(-exp(theta[2])/2*s*exp(theta[1]+exp(theta[2])/2) - exp(theta[2])/2/sigma2 + 1/2)
return(c(g1,g2))
}
set.seed(12345)
n=2^9
sigma=1
data <- readRDS("C:/Document/Serieux/Travail/Data_analysis_and_papers/anjing_data/xiong_atact_seq_multi_trait.12regions.51.2kb_expanded.binned_coverage_count.rds")
X=data[[1]]$filtered_geno
sum(is.na(X))
X
for ( k in 1:ncol(X)){
if ( sum(is.na(X[,k]))>0){
X[which(is.na(X[,k])),k]= median(X[-which(is.na(X[,k])),k])
}
}
X= X[,-which (apply(X,2,sum)<10) ]
true_pos=1
dl= list()
mu0= mu=c(rep(0.3,n/4), rep(3, n/4), rep(10, n/4), rep(0.3, n/4))
mu1= mu=c(rep(0.3,n/4), rep(3, n/4), rep(5, n/4), rep(0.3, n/4))
mu2=  mu=c(rep(0.3,n/4), rep(3, n/4), rep(2.5, n/4), rep(0.3, n/4))
for ( i in 1:nrow(X)){
if(X[i,true_pos]==0){
dl[[i]]=  rpois(length(mu0),exp(log(mu0)+rnorm(n=length(mu),sd=sigma)))
}
if(X[i,true_pos]==1){
dl[[i]]=  rpois(length(mu1),exp(log(mu1)+rnorm(n=length(mu),sd=sigma)))
}
if(X[i,true_pos]==2){
dl[[i]]=  rpois(length(mu2),exp(log(mu2)+rnorm(n=length(mu),sd=sigma)))
}
}
Y= do.call(rbind, dl)
res1 = Pois_fSuSiE(Y=Y,X=X[,1:10] ,L=3,
max.iter=1 )
pois_mean_GG(c(Y), prior_mean = 0*c(Y),
s =  rep( 1, ncol(Y)),
prior_var =1 )
res5 = Pois_fSuSiE(Y=Y,X=X[,1:10] ,L=3, max.iter=2, maxit.fsusie = 2)
pois_mean_GG(c(Y), prior_mean = 0*c(Y),
s =  rep( 1, ncol(Y)),
prior_var =1 )
set.seed(12345)
n=2^9
sigma=1
data <- readRDS("C:/Document/Serieux/Travail/Data_analysis_and_papers/anjing_data/xiong_atact_seq_multi_trait.12regions.51.2kb_expanded.binned_coverage_count.rds")
X=data[[1]]$filtered_geno
sum(is.na(X))
X
for ( k in 1:ncol(X)){
if ( sum(is.na(X[,k]))>0){
X[which(is.na(X[,k])),k]= median(X[-which(is.na(X[,k])),k])
}
}
X= X[,-which (apply(X,2,sum)<10) ]
true_pos=1
dl= list()
mu0= mu=c(rep(0.3,n/4), rep(3, n/4), rep(10, n/4), rep(0.3, n/4))
mu1= mu=c(rep(0.3,n/4), rep(3, n/4), rep(5, n/4), rep(0.3, n/4))
mu2=  mu=c(rep(0.3,n/4), rep(3, n/4), rep(2.5, n/4), rep(0.3, n/4))
for ( i in 1:nrow(X)){
if(X[i,true_pos]==0){
dl[[i]]=  rpois(length(mu0),exp(log(mu0)+rnorm(n=length(mu),sd=sigma)))
}
if(X[i,true_pos]==1){
dl[[i]]=  rpois(length(mu1),exp(log(mu1)+rnorm(n=length(mu),sd=sigma)))
}
if(X[i,true_pos]==2){
dl[[i]]=  rpois(length(mu2),exp(log(mu2)+rnorm(n=length(mu),sd=sigma)))
}
}
Y= do.call(rbind, dl)
res1 = Pois_fSuSiE(Y=Y,X=X[,1:10] ,L=3,
max.iter=1 )
res5 = Pois_fSuSiE(Y=Y,X=X[,1:10] ,L=3, max.iter=2, maxit.fsusie = 2)
res10 = Pois_fSuSiE(Y=Y,X=X[,1:10],L=3, max.iter=20, maxit.fsusie = 1)
res5 = Pois_fSuSiE(Y=Y,X=X[,1:10] ,L=3, max.iter=5, maxit.fsusie = 2)
set.seed(12345)
n=2^9
sigma=1
data <- readRDS("C:/Document/Serieux/Travail/Data_analysis_and_papers/anjing_data/xiong_atact_seq_multi_trait.12regions.51.2kb_expanded.binned_coverage_count.rds")
X=data[[1]]$filtered_geno
sum(is.na(X))
X
for ( k in 1:ncol(X)){
if ( sum(is.na(X[,k]))>0){
X[which(is.na(X[,k])),k]= median(X[-which(is.na(X[,k])),k])
}
}
X= X[,-which (apply(X,2,sum)<10) ]
true_pos=1
dl= list()
mu0= mu=c(rep(0.3,n/4), rep(3, n/4), rep(10, n/4), rep(0.3, n/4))
mu1= mu=c(rep(0.3,n/4), rep(3, n/4), rep(5, n/4), rep(0.3, n/4))
mu2=  mu=c(rep(0.3,n/4), rep(3, n/4), rep(2.5, n/4), rep(0.3, n/4))
for ( i in 1:nrow(X)){
if(X[i,true_pos]==0){
dl[[i]]=  rpois(length(mu0),exp(log(mu0)+rnorm(n=length(mu),sd=sigma)))
}
if(X[i,true_pos]==1){
dl[[i]]=  rpois(length(mu1),exp(log(mu1)+rnorm(n=length(mu),sd=sigma)))
}
if(X[i,true_pos]==2){
dl[[i]]=  rpois(length(mu2),exp(log(mu2)+rnorm(n=length(mu),sd=sigma)))
}
}
Y= do.call(rbind, dl)
res1 = Pois_fSuSiE(Y=Y,X=X[,1:10] ,L=3,
max.iter=1 )
res5 = Pois_fSuSiE(Y=Y,X=X[,1:10] ,L=3, max.iter=5, maxit.fsusie = 2)
library(mvPoisVA)
pois_mean_GG1_obj
pois_mean_GG1_obj_gradient
# Do NOT run library(mvPoisVA) before this
remotes::install_github("william-denault/mvPoisVA")
library(mvPoisVA)
set.seed(12345)
n=2^9
sigma=1
data <- readRDS("C:/Document/Serieux/Travail/Data_analysis_and_papers/anjing_data/xiong_atact_seq_multi_trait.12regions.51.2kb_expanded.binned_coverage_count.rds")
X=data[[1]]$filtered_geno
sum(is.na(X))
X
for ( k in 1:ncol(X)){
if ( sum(is.na(X[,k]))>0){
X[which(is.na(X[,k])),k]= median(X[-which(is.na(X[,k])),k])
}
}
X= X[,-which (apply(X,2,sum)<10) ]
true_pos=1
dl= list()
mu0= mu=c(rep(0.3,n/4), rep(3, n/4), rep(10, n/4), rep(0.3, n/4))
mu1= mu=c(rep(0.3,n/4), rep(3, n/4), rep(5, n/4), rep(0.3, n/4))
mu2=  mu=c(rep(0.3,n/4), rep(3, n/4), rep(2.5, n/4), rep(0.3, n/4))
for ( i in 1:nrow(X)){
if(X[i,true_pos]==0){
dl[[i]]=  rpois(length(mu0),exp(log(mu0)+rnorm(n=length(mu),sd=sigma)))
}
if(X[i,true_pos]==1){
dl[[i]]=  rpois(length(mu1),exp(log(mu1)+rnorm(n=length(mu),sd=sigma)))
}
if(X[i,true_pos]==2){
dl[[i]]=  rpois(length(mu2),exp(log(mu2)+rnorm(n=length(mu),sd=sigma)))
}
}
Y= do.call(rbind, dl)
res5 = Pois_fSuSiE(Y=Y,X=X[,1:10] ,L=3, max.iter=5, maxit.fsusie = 2)
library(mvPoisVA)
set.seed(12345)
n=2^9
sigma=1
data <- readRDS("C:/Document/Serieux/Travail/Data_analysis_and_papers/anjing_data/xiong_atact_seq_multi_trait.12regions.51.2kb_expanded.binned_coverage_count.rds")
X=data[[1]]$filtered_geno
sum(is.na(X))
X
for ( k in 1:ncol(X)){
if ( sum(is.na(X[,k]))>0){
X[which(is.na(X[,k])),k]= median(X[-which(is.na(X[,k])),k])
}
}
X= X[,-which (apply(X,2,sum)<10) ]
true_pos=1
dl= list()
mu0= mu=c(rep(0.3,n/4), rep(3, n/4), rep(10, n/4), rep(0.3, n/4))
mu1= mu=c(rep(0.3,n/4), rep(3, n/4), rep(5, n/4), rep(0.3, n/4))
mu2=  mu=c(rep(0.3,n/4), rep(3, n/4), rep(2.5, n/4), rep(0.3, n/4))
for ( i in 1:nrow(X)){
if(X[i,true_pos]==0){
dl[[i]]=  rpois(length(mu0),exp(log(mu0)+rnorm(n=length(mu),sd=sigma)))
}
if(X[i,true_pos]==1){
dl[[i]]=  rpois(length(mu1),exp(log(mu1)+rnorm(n=length(mu),sd=sigma)))
}
if(X[i,true_pos]==2){
dl[[i]]=  rpois(length(mu2),exp(log(mu2)+rnorm(n=length(mu),sd=sigma)))
}
}
Y= do.call(rbind, dl)
res5 = Pois_fSuSiE(Y=Y,X=X[,1:10] ,L=3, max.iter=5, maxit.fsusie = 2)
library(mvPoisVA)
set.seed(12345)
n=2^9
sigma=1
data <- readRDS("C:/Document/Serieux/Travail/Data_analysis_and_papers/anjing_data/xiong_atact_seq_multi_trait.12regions.51.2kb_expanded.binned_coverage_count.rds")
X=data[[1]]$filtered_geno
sum(is.na(X))
X
for ( k in 1:ncol(X)){
if ( sum(is.na(X[,k]))>0){
X[which(is.na(X[,k])),k]= median(X[-which(is.na(X[,k])),k])
}
}
X= X[,-which (apply(X,2,sum)<10) ]
true_pos=1
dl= list()
mu0= mu=c(rep(0.3,n/4), rep(3, n/4), rep(10, n/4), rep(0.3, n/4))
mu1= mu=c(rep(0.3,n/4), rep(3, n/4), rep(5, n/4), rep(0.3, n/4))
mu2=  mu=c(rep(0.3,n/4), rep(3, n/4), rep(2.5, n/4), rep(0.3, n/4))
for ( i in 1:nrow(X)){
if(X[i,true_pos]==0){
dl[[i]]=  rpois(length(mu0),exp(log(mu0)+rnorm(n=length(mu),sd=sigma)))
}
if(X[i,true_pos]==1){
dl[[i]]=  rpois(length(mu1),exp(log(mu1)+rnorm(n=length(mu),sd=sigma)))
}
if(X[i,true_pos]==2){
dl[[i]]=  rpois(length(mu2),exp(log(mu2)+rnorm(n=length(mu),sd=sigma)))
}
}
Y= do.call(rbind, dl)
res5 = Pois_fSuSiE(Y=Y,X=X[,1:10] ,L=3, max.iter=5, maxit.fsusie = 2)
library(mvPoisVA)
set.seed(12345)
n=2^9
sigma=1
data <- readRDS("C:/Document/Serieux/Travail/Data_analysis_and_papers/anjing_data/xiong_atact_seq_multi_trait.12regions.51.2kb_expanded.binned_coverage_count.rds")
X=data[[1]]$filtered_geno
sum(is.na(X))
X
for ( k in 1:ncol(X)){
if ( sum(is.na(X[,k]))>0){
X[which(is.na(X[,k])),k]= median(X[-which(is.na(X[,k])),k])
}
}
X= X[,-which (apply(X,2,sum)<10) ]
true_pos=1
dl= list()
mu0= mu=c(rep(0.3,n/4), rep(3, n/4), rep(10, n/4), rep(0.3, n/4))
mu1= mu=c(rep(0.3,n/4), rep(3, n/4), rep(5, n/4), rep(0.3, n/4))
mu2=  mu=c(rep(0.3,n/4), rep(3, n/4), rep(2.5, n/4), rep(0.3, n/4))
for ( i in 1:nrow(X)){
if(X[i,true_pos]==0){
dl[[i]]=  rpois(length(mu0),exp(log(mu0)+rnorm(n=length(mu),sd=sigma)))
}
if(X[i,true_pos]==1){
dl[[i]]=  rpois(length(mu1),exp(log(mu1)+rnorm(n=length(mu),sd=sigma)))
}
if(X[i,true_pos]==2){
dl[[i]]=  rpois(length(mu2),exp(log(mu2)+rnorm(n=length(mu),sd=sigma)))
}
}
Y= do.call(rbind, dl)
scaling = rep(1, nrow(Y))
pois_mean_GG(x=c(Y),
prior_mean = 0*c(Y),
s =  rep( scaling, ncol(Y)),
prior_var = sigma2_pois )
pois_mean_GG(x=c(Y),
prior_mean = 0*c(Y),
s =  rep( scaling, ncol(Y)),
prior_var =1 )
rm(list=ls())
library(mvPoisVA)
set.seed(12345)
n=2^9
sigma=1
data <- readRDS("C:/Document/Serieux/Travail/Data_analysis_and_papers/anjing_data/xiong_atact_seq_multi_trait.12regions.51.2kb_expanded.binned_coverage_count.rds")
X=data[[1]]$filtered_geno
sum(is.na(X))
X
for ( k in 1:ncol(X)){
if ( sum(is.na(X[,k]))>0){
X[which(is.na(X[,k])),k]= median(X[-which(is.na(X[,k])),k])
}
}
X= X[,-which (apply(X,2,sum)<10) ]
true_pos=1
dl= list()
mu0= mu=c(rep(0.3,n/4), rep(3, n/4), rep(10, n/4), rep(0.3, n/4))
mu1= mu=c(rep(0.3,n/4), rep(3, n/4), rep(5, n/4), rep(0.3, n/4))
mu2=  mu=c(rep(0.3,n/4), rep(3, n/4), rep(2.5, n/4), rep(0.3, n/4))
for ( i in 1:nrow(X)){
if(X[i,true_pos]==0){
dl[[i]]=  rpois(length(mu0),exp(log(mu0)+rnorm(n=length(mu),sd=sigma)))
}
if(X[i,true_pos]==1){
dl[[i]]=  rpois(length(mu1),exp(log(mu1)+rnorm(n=length(mu),sd=sigma)))
}
if(X[i,true_pos]==2){
dl[[i]]=  rpois(length(mu2),exp(log(mu2)+rnorm(n=length(mu),sd=sigma)))
}
}
Y= do.call(rbind, dl)
scaling = rep(1, nrow(Y))
pois_mean_GG(x=c(Y),
prior_mean = 0*c(Y),
s =  rep( scaling, ncol(Y)),
prior_var =1 )
knitr::opts_chunk$set(echo = TRUE)
library(mvPoisVA)
n=300
x = rpois(n,exp(2*sin(1:n/20)))
naive=pois_mean_GG(x)
library(mvPoisVA)
set.seed(12345)
n=2^9
sigma=1
data <- readRDS("C:/Document/Serieux/Travail/Data_analysis_and_papers/anjing_data/xiong_atact_seq_multi_trait.12regions.51.2kb_expanded.binned_coverage_count.rds")
X=data[[1]]$filtered_geno
sum(is.na(X))
X
for ( k in 1:ncol(X)){
if ( sum(is.na(X[,k]))>0){
X[which(is.na(X[,k])),k]= median(X[-which(is.na(X[,k])),k])
}
}
X= X[,-which (apply(X,2,sum)<10) ]
true_pos=1
dl= list()
mu0= mu=c(rep(0.3,n/4), rep(3, n/4), rep(10, n/4), rep(0.3, n/4))
mu1= mu=c(rep(0.3,n/4), rep(3, n/4), rep(5, n/4), rep(0.3, n/4))
mu2=  mu=c(rep(0.3,n/4), rep(3, n/4), rep(2.5, n/4), rep(0.3, n/4))
for ( i in 1:nrow(X)){
if(X[i,true_pos]==0){
dl[[i]]=  rpois(length(mu0),exp(log(mu0)+rnorm(n=length(mu),sd=sigma)))
}
if(X[i,true_pos]==1){
dl[[i]]=  rpois(length(mu1),exp(log(mu1)+rnorm(n=length(mu),sd=sigma)))
}
if(X[i,true_pos]==2){
dl[[i]]=  rpois(length(mu2),exp(log(mu2)+rnorm(n=length(mu),sd=sigma)))
}
}
Y= do.call(rbind, dl)
scaling = rep(1, nrow(Y))
pois_mean_GG(x=c(Y),
prior_mean = 0*c(Y),
s =  rep( scaling, ncol(Y)),
prior_var =1 )
knitr::opts_chunk$set(echo = TRUE)
library(mvPoisVA)
n=300
x = rpois(n,exp(2*sin(1:n/20)))
naive=pois_mean_GG(x)
source("C:/Document/Serieux/Travail/Package/mvPoisVA/R/Poisson_Gaussina_posterior.R", echo=TRUE)
library(mvPoisVA)
n=300
x = rpois(n,exp(2*sin(1:n/20)))
naive=pois_mean_GG(x)
prior_base= pois_mean_GG(x,
prior_mean = 2*sin(1:n/20),
prior_var=rep(1, length(n)))
pois_mean_GG
pois_mean_GG_opt_obj
knitr::opts_chunk$set(echo = TRUE)
library(mvPoisVA)
n=300
x = rpois(n,exp(2*sin(1:n/20)))
naive=pois_mean_GG(x)
prior_base= pois_mean_GG(x,
prior_mean = 2*sin(1:n/20),
prior_var=rep(1, length(n)))
library(mvPoisVA)
n=300
x = rpois(n,exp(2*sin(1:n/20)))
naive=pois_mean_GG(x)
prior_base= pois_mean_GG(x,
prior_mean = 2*sin(1:n/20),
prior_var=rep(1, length(n)))
library(mvPoisVA)
set.seed(12345)
n=2^9
sigma=1
data <- readRDS("C:/Document/Serieux/Travail/Data_analysis_and_papers/anjing_data/xiong_atact_seq_multi_trait.12regions.51.2kb_expanded.binned_coverage_count.rds")
X=data[[1]]$filtered_geno
sum(is.na(X))
X
for ( k in 1:ncol(X)){
if ( sum(is.na(X[,k]))>0){
X[which(is.na(X[,k])),k]= median(X[-which(is.na(X[,k])),k])
}
}
X= X[,-which (apply(X,2,sum)<10) ]
true_pos=1
dl= list()
mu0= mu=c(rep(0.3,n/4), rep(3, n/4), rep(10, n/4), rep(0.3, n/4))
mu1= mu=c(rep(0.3,n/4), rep(3, n/4), rep(5, n/4), rep(0.3, n/4))
mu2=  mu=c(rep(0.3,n/4), rep(3, n/4), rep(2.5, n/4), rep(0.3, n/4))
for ( i in 1:nrow(X)){
if(X[i,true_pos]==0){
dl[[i]]=  rpois(length(mu0),exp(log(mu0)+rnorm(n=length(mu),sd=sigma)))
}
if(X[i,true_pos]==1){
dl[[i]]=  rpois(length(mu1),exp(log(mu1)+rnorm(n=length(mu),sd=sigma)))
}
if(X[i,true_pos]==2){
dl[[i]]=  rpois(length(mu2),exp(log(mu2)+rnorm(n=length(mu),sd=sigma)))
}
}
Y= do.call(rbind, dl)
scaling = rep(1, nrow(Y))
pois_mean_GG(x=c(Y),
prior_mean = 0*c(Y),
s =  rep( scaling, ncol(Y)),
prior_var =1 )
res5 = Pois_fSuSiE(Y=Y,X=X[,1:10] ,L=3, max.iter=5, maxit.fsusie = 2)
library(mvPoisVA)
n=300
x = rpois(n,exp(2*sin(1:n/20)))
naive=pois_mean_GG(x)
prior_base= pois_mean_GG(x,
prior_mean = 2*sin(1:n/20),
prior_var=rep(1, length(n)))
pois_mean_GG(x=c(Y),
prior_mean = 0*c(Y),
s =  rep( scaling, ncol(Y)),
prior_var =1 )
source("C:/Document/Serieux/Travail/Package/mvPoisVA/R/Pois_fSuSiE.R", echo=TRUE)
res5 = Pois_fSuSiE(Y=Y,X=X[,1:10] ,L=3, max.iter=5, maxit.fsusie = 2)
library(mvPoisVA)
set.seed(12345)
n=2^9
sigma=1
data <- readRDS("C:/Document/Serieux/Travail/Data_analysis_and_papers/anjing_data/xiong_atact_seq_multi_trait.12regions.51.2kb_expanded.binned_coverage_count.rds")
X=data[[1]]$filtered_geno
sum(is.na(X))
X
for ( k in 1:ncol(X)){
if ( sum(is.na(X[,k]))>0){
X[which(is.na(X[,k])),k]= median(X[-which(is.na(X[,k])),k])
}
}
X= X[,-which (apply(X,2,sum)<10) ]
true_pos=1
dl= list()
mu0= mu=c(rep(0.3,n/4), rep(3, n/4), rep(10, n/4), rep(0.3, n/4))
mu1= mu=c(rep(0.3,n/4), rep(3, n/4), rep(5, n/4), rep(0.3, n/4))
mu2=  mu=c(rep(0.3,n/4), rep(3, n/4), rep(2.5, n/4), rep(0.3, n/4))
for ( i in 1:nrow(X)){
if(X[i,true_pos]==0){
dl[[i]]=  rpois(length(mu0),exp(log(mu0)+rnorm(n=length(mu),sd=sigma)))
}
if(X[i,true_pos]==1){
dl[[i]]=  rpois(length(mu1),exp(log(mu1)+rnorm(n=length(mu),sd=sigma)))
}
if(X[i,true_pos]==2){
dl[[i]]=  rpois(length(mu2),exp(log(mu2)+rnorm(n=length(mu),sd=sigma)))
}
}
Y= do.call(rbind, dl)
scaling = rep(1, nrow(Y))
pois_mean_GG(x=c(Y),
prior_mean = 0*c(Y),
s =  rep( scaling, ncol(Y)),
prior_var =1 )
res5 = Pois_fSuSiE(Y=Y,X=X[,1:10] ,L=3, max.iter=5, maxit.fsusie = 2)
