do.call(rbind, res_list))
res=as.data.frame(res)
apply(res, 2,mean)
library(dplyr)
est05 =res%>%
group_by(L) %>%
summarise(cov_pois= mean(false_cs_pois),
cov = mean(false_cs ),
n = n())
est05$overdisp =0.5
load("C:/Document/Serieux/Travail/Package/mvPoisVA/simredoing_mv_sd_1.RData")
res= do.call(rbind, res_list)
res=as.data.frame(res)
apply(res, 2,mean)
library(dplyr)
est1 =res%>%
group_by(L) %>%
summarise(cov_pois= mean(false_cs_pois),
cov = mean(false_cs ),
n = n())
est1$overdisp =1
df=data.frame(L= rep(est0$L,6),
cov= c(est0$cov_pois,est0$cov,
est05$cov_pois,est05$cov,
est1$cov_pois,est1$cov
),
overdisp= c(rep(est0$overdisp,2),
rep(est05$overdisp,2),
rep(est1$overdisp,2))
)
library(ggplot2)
df=data.frame(L= rep(est0$L,6),
cov= c(est0$cov_pois,est0$cov,
est05$cov_pois,est05$cov,
est1$cov_pois,est1$cov
),
overdisp= c(rep(est0$overdisp,2),
rep(est05$overdisp,2),
rep(est1$overdisp,2)
),
method= c( rep("PoisFsusie", length(est0$L)),rep("Fsusie", length(est0$L)),
rep("PoisFsusie", length(est0$L)),rep("Fsusie", length(est0$L)),
rep("PoisFsusie", length(est0$L)),rep("Fsusie", length(est0$L))
)
)
library(ggplot2)
df=data.frame(L= rep(est0$L,6),
cov= 1- c(est0$cov_pois,est0$cov,
est05$cov_pois,est05$cov,
est1$cov_pois,est1$cov
),
overdisp= c(rep(est0$overdisp,2),
rep(est05$overdisp,2),
rep(est1$overdisp,2)
),
method= c( rep("PoisFsusie", length(est0$L)),rep("Fsusie", length(est0$L)),
rep("PoisFsusie", length(est0$L)),rep("Fsusie", length(est0$L)),
rep("PoisFsusie", length(est0$L)),rep("Fsusie", length(est0$L))
)
)
ggplot(df, aes(x=L, y=cov, colour = as.factor(method)))+
geom_point()
ggplot(df, aes(x=L, y=cov, colour = as.factor(method)))+
geom_point()+
facet_wrap(overdisp~.)
rm(list=ls())
load("C:/Document/Serieux/Travail/Package/mvPoisVA/simredoing_mv_sd_0.RData")
res= do.call(rbind, res_list)
res=as.data.frame(res)
apply(res, 2,mean)
library(dplyr)
est0 =res%>%
group_by(L) %>%
summarise(cov_pois= mean(false_cs_pois),
cov = mean(false_cs ),
n = n())
est0$overdisp =0
load("C:/Document/Serieux/Travail/Package/mvPoisVA/simredoing_mv_sd_0.5.RData")
res= do.call(rbind, res_list)
load("C:/Document/Serieux/Travail/Package/mvPoisVA/simredoing_mv.RData")
res= rbind(res,
do.call(rbind, res_list))
res=as.data.frame(res)
apply(res, 2,mean)
library(dplyr)
est05 =res%>%
group_by(L) %>%
summarise(cov_pois= mean(false_cs_pois),
cov = mean(false_cs ),
n = n())
est05$overdisp =0.5
load("C:/Document/Serieux/Travail/Package/mvPoisVA/simredoing_mv_sd_1.RData")
res= do.call(rbind, res_list)
res=as.data.frame(res)
apply(res, 2,mean)
library(dplyr)
est1 =res%>%
group_by(L) %>%
summarise(cov_pois= mean(false_cs_pois),
cov = mean(false_cs ),
n = n())
est1$overdisp =1
df=data.frame(L= rep(est0$L,6),
cov= 1- c(est0$cov_pois,est0$cov,
est05$cov_pois,est05$cov,
est1$cov_pois,est1$cov
),
overdisp= c(rep(est0$overdisp,2),
rep(est05$overdisp,2),
rep(est1$overdisp,2)
),
method= c( rep("PoisFsusie", length(est0$L)),rep("Fsusie", length(est0$L)),
rep("PoisFsusie", length(est0$L)),rep("Fsusie", length(est0$L)),
rep("PoisFsusie", length(est0$L)),rep("Fsusie", length(est0$L))
)
)
library(ggplot2)
ggplot(df, aes(x=L, y=cov, colour = as.factor(method)))+
geom_point()+
facet_wrap(overdisp~.)
ggplot(df, aes(x=L, y=cov, colour = as.factor(method)))+
geom_point(size=2)+
facet_wrap(overdisp~.)
est0$overdisp
est0
rm(list=ls())
load("C:/Document/Serieux/Travail/Package/mvPoisVA/simredoing_mv_sd_0.RData")
res= do.call(rbind, res_list)
res=as.data.frame(res)
res
ggplot(df, aes(x=L, y=cov, colour = as.factor(method)))+
geom_point(size=2)+
geom_hline(yintercept = 0.95)+
facet_wrap(overdisp~.)
rm(list=ls())
load("C:/Document/Serieux/Travail/Package/mvPoisVA/simredoing_mv_sd_0.RData")
res= do.call(rbind, res_list)
res=as.data.frame(res)
apply(res, 2,mean)
library(dplyr)
est0 =res%>%
group_by(L) %>%
summarise(cov_pois= mean(false_cs_pois),
cov = mean(false_cs ),
n = n())
est0$overdisp =0
load("C:/Document/Serieux/Travail/Package/mvPoisVA/simredoing_mv_sd_0.5.RData")
res= do.call(rbind, res_list)
load("C:/Document/Serieux/Travail/Package/mvPoisVA/simredoing_mv.RData")
res= rbind(res,
do.call(rbind, res_list))
res=as.data.frame(res)
apply(res, 2,mean)
library(dplyr)
est05 =res%>%
group_by(L) %>%
summarise(cov_pois= mean(false_cs_pois),
cov = mean(false_cs ),
n = n())
est05$overdisp =0.5
load("C:/Document/Serieux/Travail/Package/mvPoisVA/simredoing_mv_sd_1.RData")
res= do.call(rbind, res_list)
res=as.data.frame(res)
apply(res, 2,mean)
library(dplyr)
est1 =res%>%
group_by(L) %>%
summarise(cov_pois= mean(false_cs_pois),
cov = mean(false_cs ),
n = n())
est1$overdisp =1
df=data.frame(L= rep(est0$L,6),
cov= 1- c(est0$cov_pois,est0$cov,
est05$cov_pois,est05$cov,
est1$cov_pois,est1$cov
),
overdisp= c(rep(est0$overdisp,2),
rep(est05$overdisp,2),
rep(est1$overdisp,2)
),
method= c( rep("PoisFsusie", length(est0$L)),rep("Fsusie", length(est0$L)),
rep("PoisFsusie", length(est0$L)),rep("Fsusie", length(est0$L)),
rep("PoisFsusie", length(est0$L)),rep("Fsusie", length(est0$L))
)
)
library(ggplot2)
ggplot(df, aes(x=L, y=cov, colour = as.factor(method)))+
geom_point(size=2)+
geom_hline(yintercept = 0.95)+
facet_wrap(overdisp~.)
path_mv_pois="C:/Document/Serieux/Travail/Data_analysis_and_papers/GTEX_analysis_Fsusie_res/new_pois_split_pois"
lf_mv_pois= list.files(path_mv_pois)
lf_mv_pois[1:10]
extract_gene_id <- function(x) {
sub("\\..*", "", x) # Removes everything after the first dot
}
lt =list()
n_cs_fsusie=0
overlapp= 0
for ( o in 1: length (lf_mv_pois)){
load( paste0(path_mv_pois,"/",lf_mv_pois[o] ))
cs_fsusie =out$res_fsusie$cs
n_cs_fsusie= length(out$res_fsusie$cs)
cs_size_fsusie= mean (lengths(cs_fsusie))
n_cs_mv_pois= length(out$res_pois $cs)
cs_mv_pois=out$res_pois $cs
cs_size_pois= mean (lengths(cs_mv_pois))
overlapp= 0
if( n_cs_fsusie>0 & n_cs_mv_pois>0 ){
for ( i in 1: length(  cs_fsusie)){
for ( j in 1:length(cs_mv_pois)){
if(  length( intersect(cs_fsusie[[i]] , cs_mv_pois[[j]]))>0){
overlapp=overlapp+1
}
}
}
}
lt[[o]]= c( n_cs_fsusie,cs_size_fsusie,n_cs_mv_pois,  cs_size_pois, overlapp)
}
sum_res= do.call(rbind, lt)
colnames(sum_res)= c( "n_cs_fsusie","cs_size_fsusie","n_cs_mv_pois",  "cs_size_pois", "overlapp")
sum_res= data.frame(sum_res)
sum_res$n_cs_mv_pois[which(sum_res$cs_size_pois>100)]=0
sum_res$n_cs_fsusie[which(sum_res$cs_size_fsusie>100)]=0
idx= which (sum_res$n_cs_fsusie==0 & sum_res$n_cs_mv_pois==0)
length(idx)
#sum_res_res=sum_res[-idx,]
table(sum_res$overlapp)
table(sum_res$overlapp[-idx])[1]
1- (table(sum_res$overlapp[-idx])[1]/(sum(sum_res$overlapp[-idx])+table(sum_res$overlapp[-idx])[1]))
idx= which (sum_res$n_cs_fsusie==0 | sum_res$n_cs_mv_pois==0)
apply(sum_res[-idx,], 2, sum)
24/32
source("C:/Document/Serieux/Travail/Data_analysis_and_papers/GTEX_analysis_Fsusie/code/plot_log.R")
which (sum_res$n_cs_fsusie==0 & !(sum_res$n_cs_mv_pois==0))
load( paste0(path_mv_pois,"/",lf_mv_pois[32] ))
fsusie_log_plot(obj=out$res_pois ,chr = paste0("chr",out$chr),
pos0 = out$locus[1],pos1 = out$locus[2],
X=out$X,Y=out$Y,snp_info = out$info_SNP,cs = 1,
effect_log = TRUE,
log1p_count=TRUE
)
source("C:/Document/Serieux/Travail/Data_analysis_and_papers/GTEX_analysis_Fsusie/code/plot_log.R")
which (sum_res$n_cs_fsusie==0 & !(sum_res$n_cs_mv_pois==0))
load( paste0(path_mv_pois,"/",lf_mv_pois[32] ))
fsusie_log_plot(obj=out$res_pois ,chr = paste0("chr",out$chr),
pos0 = out$locus[1],pos1 = out$locus[2],
X=out$X,Y=out$Y,snp_info = out$info_SNP,cs = 1,
effect_log = TRUE,
log1p_count=TRUE
)
load( paste0(path_mv_pois,"/",lf_mv_pois[33] ))
size_factor=rowSums(out$Y)/ mean(rowSums(out$Y))
plot (log1p( out$Y /as.vector(size_factor)) ,out$Mu_pm)
for (i in 1:nrow(out$Y)){
points (log1p( out$Y /as.vector(size_factor))[i,] ,out$Mu_pm[i,],
col=i)
}
abline(a=0,b=1)
apply(sum_res[-idx,], 2, sum)
rm(list = ls())
library(mvPoisVA)
library(fsusieR)
library(susieR)
library(ebnm)
'%!in%' <- function(x,y)!('%in%'(x,y))
data(N3finemapping)
X <- N3finemapping$X
mysd=0
N =100
set.seed(length(res_list)+2)
rm(list = ls())
library(mvPoisVA)
library(fsusieR)
library(susieR)
library(ebnm)
'%!in%' <- function(x,y)!('%in%'(x,y))
data(N3finemapping)
X <- N3finemapping$X
mysd=0
N =100
set.seed(1)
genotype <-X
data(N3finemapping)
X <- N3finemapping$X
genotype <-X[sample(1:nrow(X), size=N),]
idx <- which( apply( genotype,2, var ) <1e-15)
if( length(idx)==0){
X <-genotype
Rtrue <- cor (genotype )
}else{
genotype <- genotype [, -idx]
X <-genotype
}
G<- genotype
X <- (X -0.99*min(X))/(0.5*max(X ))
G <-  (G -0.99*min(G ))/(0.5*max(G ))
idx <- which( apply( genotype,2, var ) <1e-15)
if ( length(idx)>0){
genotype <- genotype [, -idx]
}
lev_res =6
count.data  <- list()
L <- sample(1:5, size =1)#actual number of effect
lf <-  list()
for ( l in 1:L ){
if ( l%%2==1){
lf[[l]]<- cos((1:2^6) /(0.5*2^6))
}else{
lf[[l]]<- sin((1:2^6) /(0.5*2^6))
}
# #rep(0.1, 2^6)
#lf[[1]][10:20] <-2
# rep(0.1, 2^6)
#lf[[2]][50:60] <-2
}
true_pos <- sample(1:ncol(genotype), replace = FALSE,size=L)
if( length(which(apply(G,2,var)==0))>0){
G <- G[,-which(apply(G,2,var)==0)]
}
# G <- matrix( rnorm(nrow(genotype)*300), nrow = nrow(genotype))
predictor <-rep (0, length(lf[[1]] ))
count.data  <- list()
for ( l in 1:L){
G[ , true_pos[l]] <-G[ , true_pos[l]] -min(G[ , true_pos[l]] )
}
for ( i in 1:N)
{
predictor <-rep (0, length(lf[[1]] ))
for ( l in 1:L){
predictor <-predictor + G[i, true_pos[l]]*lf[[l]]+0.3
}
predictor <- exp( predictor+ rnorm(  length(lf[[1]]), sd=mysd))
count.data [[i]] <-   rpois(n= length(lf[[1]]) ,
lambda =predictor  )
}
count.data <- do.call(rbind, count.data)
Y <- count.data
tt <- mvPoisVA::pois_mean_split(c(Y),s= rep( 1, ncol(Y)))
Mu_pm <- matrix( tt$posterior$mean_log,byrow = FALSE, ncol=ncol(Y))
plot (log1p( out$Y /as.vector(size_factor)) , Mu_pm)
plot (log1p(  Y ) , Mu_pm)
rm(list = ls())
library(mvPoisVA)
library(fsusieR)
library(susieR)
library(ebnm)
'%!in%' <- function(x,y)!('%in%'(x,y))
data(N3finemapping)
X <- N3finemapping$X
mysd=1
N =100
set.seed(1)
genotype <-X
data(N3finemapping)
X <- N3finemapping$X
genotype <-X[sample(1:nrow(X), size=N),]
idx <- which( apply( genotype,2, var ) <1e-15)
if( length(idx)==0){
X <-genotype
Rtrue <- cor (genotype )
}else{
genotype <- genotype [, -idx]
X <-genotype
}
G<- genotype
X <- (X -0.99*min(X))/(0.5*max(X ))
G <-  (G -0.99*min(G ))/(0.5*max(G ))
idx <- which( apply( genotype,2, var ) <1e-15)
if ( length(idx)>0){
genotype <- genotype [, -idx]
}
lev_res =6
count.data  <- list()
L <- sample(1:5, size =1)#actual number of effect
lf <-  list()
for ( l in 1:L ){
if ( l%%2==1){
lf[[l]]<- cos((1:2^6) /(0.5*2^6))
}else{
lf[[l]]<- sin((1:2^6) /(0.5*2^6))
}
# #rep(0.1, 2^6)
#lf[[1]][10:20] <-2
# rep(0.1, 2^6)
#lf[[2]][50:60] <-2
}
true_pos <- sample(1:ncol(genotype), replace = FALSE,size=L)
if( length(which(apply(G,2,var)==0))>0){
G <- G[,-which(apply(G,2,var)==0)]
}
# G <- matrix( rnorm(nrow(genotype)*300), nrow = nrow(genotype))
predictor <-rep (0, length(lf[[1]] ))
count.data  <- list()
for ( l in 1:L){
G[ , true_pos[l]] <-G[ , true_pos[l]] -min(G[ , true_pos[l]] )
}
for ( i in 1:N)
{
predictor <-rep (0, length(lf[[1]] ))
for ( l in 1:L){
predictor <-predictor + G[i, true_pos[l]]*lf[[l]]+0.3
}
predictor <- exp( predictor+ rnorm(  length(lf[[1]]), sd=mysd))
count.data [[i]] <-   rpois(n= length(lf[[1]]) ,
lambda =predictor  )
}
count.data <- do.call(rbind, count.data)
Y <- count.data
tt <- mvPoisVA::pois_mean_split(c(Y),s= rep( 1, ncol(Y)))
Mu_pm <- matrix( tt$posterior$mean_log,byrow = FALSE, ncol=ncol(Y))
plot (log1p(  Y ) , Mu_pm)
for (i in 1:nrow(out$Y)){
points (log1p( out$Y /as.vector(size_factor))[i,] ,out$Mu_pm[i,],
col=i)
}
plot (log1p(  Y ) , Mu_pm)
for (i in 1:nrow(out$Y)){
points (log1p( Y /as.vector(size_factor))[i,]  Mu_pm[i,],
plot (log1p(  Y ) , Mu_pm)
for (i in 1:nrow(out$Y)){
points (log1p( Y  )[i,]  Mu_pm[i,],
points (log1p( Y  )[i,] , Mu_pm[i,],
col=i)
plot (log1p(  Y ) , Mu_pm)
for (i in 1:nrow(out$Y)){
points (log1p( Y  )[i,] , Mu_pm[i,],
col=i)
}
plot (log1p(  Y ) , Mu_pm)
for (i in 1:nrow( Y)){
points (log1p( Y  )[i,] , Mu_pm[i,],
col=i)
}
rm(list = ls())
library(mvPoisVA)
library(fsusieR)
library(susieR)
library(ebnm)
'%!in%' <- function(x,y)!('%in%'(x,y))
data(N3finemapping)
X <- N3finemapping$X
mysd=4
N =100
set.seed(1)
genotype <-X
data(N3finemapping)
X <- N3finemapping$X
genotype <-X[sample(1:nrow(X), size=N),]
idx <- which( apply( genotype,2, var ) <1e-15)
if( length(idx)==0){
X <-genotype
Rtrue <- cor (genotype )
}else{
genotype <- genotype [, -idx]
X <-genotype
}
G<- genotype
X <- (X -0.99*min(X))/(0.5*max(X ))
G <-  (G -0.99*min(G ))/(0.5*max(G ))
idx <- which( apply( genotype,2, var ) <1e-15)
if ( length(idx)>0){
genotype <- genotype [, -idx]
}
lev_res =6
count.data  <- list()
L <- sample(1:5, size =1)#actual number of effect
lf <-  list()
for ( l in 1:L ){
if ( l%%2==1){
lf[[l]]<- cos((1:2^6) /(0.5*2^6))
}else{
lf[[l]]<- sin((1:2^6) /(0.5*2^6))
}
# #rep(0.1, 2^6)
#lf[[1]][10:20] <-2
# rep(0.1, 2^6)
#lf[[2]][50:60] <-2
}
true_pos <- sample(1:ncol(genotype), replace = FALSE,size=L)
if( length(which(apply(G,2,var)==0))>0){
G <- G[,-which(apply(G,2,var)==0)]
}
# G <- matrix( rnorm(nrow(genotype)*300), nrow = nrow(genotype))
predictor <-rep (0, length(lf[[1]] ))
count.data  <- list()
for ( l in 1:L){
G[ , true_pos[l]] <-G[ , true_pos[l]] -min(G[ , true_pos[l]] )
}
for ( i in 1:N)
{
predictor <-rep (0, length(lf[[1]] ))
for ( l in 1:L){
predictor <-predictor + G[i, true_pos[l]]*lf[[l]]+0.3
}
predictor <- exp( predictor+ rnorm(  length(lf[[1]]), sd=mysd))
count.data [[i]] <-   rpois(n= length(lf[[1]]) ,
lambda =predictor  )
}
count.data <- do.call(rbind, count.data)
Y <- count.data
tt <- mvPoisVA::pois_mean_split(c(Y),s= rep( 1, ncol(Y)))
Mu_pm <- matrix( tt$posterior$mean_log,byrow = FALSE, ncol=ncol(Y))
plot (log1p(  Y ) , Mu_pm)
for (i in 1:nrow( Y)){
points (log1p( Y  )[i,] , Mu_pm[i,],
col=i)
}
abline(a=0,b=1)
predictor
predictor+ rnorm(  length(lf[[1]]), sd=mysd)
plot( exp( predictor+ rnorm(  length(lf[[1]]), sd=mysd)))
