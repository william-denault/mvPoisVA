
library(ashr)
library(mvPoisVA)
library(susiF.alpha)
library(susieR)
data(N3finemapping)
X <- N3finemapping$X[,1:100]
mysd=0.51
N =30 
genotype <-X[1:N,1:100]

idx <- which( apply( genotype,2, var ) <1e-15)
genotype <- genotype [, -idx]
library(gplots)#

lev_res =7


count.data  <- list()
L <-  sample(1 , size =1)#actual number of effect

lf <-  list()
for(l in 1:L){
  lf[[l]] <-log(abs(0.2*sim_intenisty(lev_res )$sim_intens) )#functional effect for effect l
}




data(N3finemapping)
X <- N3finemapping$X
genotype <-X[sample(1:nrow(X), size=N),]

idx <- which( apply( genotype,2, var ) <1e-15)
if( length(idx)==0){
  X <-genotype
  
  Rtrue <- cor (genotype )
}else{
  genotype <- genotype [, -idx]
  X <-genotype
  
}
G<- genotype
X <- (X -0.99*min(X))/(0.5*max(X ))

G <-  (G -0.99*min(G ))/(0.5*max(G ))

tpos <- sample(1:ncol(genotype), replace = FALSE,size=L)
true_pos <- tpos
pos1 <- tpos[1]
pos2 <- tpos[2]
if( length(which(apply(G,2,var)==0))>0){
  G <- G[,-which(apply(G,2,var)==0)]
}
# G <- matrix( rnorm(nrow(genotype)*300), nrow = nrow(genotype))


predictor <-rep (0, length(lf[[1]] ))
count.data  <- list()
pred <- list()
for ( i in 1:N)
{
  
  predictor <-rep (0, length(lf[[1]] ))
  
  for ( l in 1:L){
    predictor <-predictor + G[i, true_pos[l]]*lf[[l]]
  }
  predictor <- exp(predictor+ rnorm(  length(lf[[1]]), sd=mysd))
  pred [[i]]<- predictor 
  count.data [[i]] <-   rpois(n= length(lf[[1]]) ,
                              lambda =predictor  )
  
}
count.data <- do.call(rbind, count.data)


Y <- count.data

fit = pois_smooth_split(Y [1,],maxiter=30)
plot( fit$Emean)
lines (pred[[1]])
points(Y[1,], col="green")

Y_t <- do.call( rbind, lapply( 1: nrow (Y), function(i)  pois_smooth_split(Y [1,],maxiter=30)$Emean) )

i=3
plot( Y_t [i,])
lines (pred[[i]])
points(Y[i,], col="green")
library(mvf.susie.alpha)
Y_data  <- list( Y_u=NULL, Y_f=list(Y_t )
)
res0 <- multfsusie(Y=Y_data,X=X,L=2, post_processing = "HMM" )
